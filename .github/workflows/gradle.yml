name: CI/CD using github actions & docker


on:
  push:
    branches: [ "release" ] # 해당 branch에 푸쉬 발생 시 업데이트

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: set chmod
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean bootJar -Pprofile=prod

      - name: Docker build & push to prod
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/beep:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/beep:latest

      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        id: deploy-prod
        with:
          host: ${{ secrets.HOST_PROD }} # EC2 퍼블릭 IPv4 DNS
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }} # EC2 private key
          envs: GITHUB_SHA
          script: |
            docker stop beep
            docker rm beep
            docker rmi ${{ secrets.DOCKER_USERNAME }}/beep:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/beep:latest
            docker run -d -p 8080:8080 --name beep ${{ secrets.DOCKER_USERNAME }}/beep:latest
#            docker stop $(docker ps -a -q)
#            docker rm $(docker ps --filter 'status=exited' -a -q)
#            docker image prune -a -f
#
#            docker pull ${{ secrets.DOCKER_USERNAME }}/beep:latest
#            docker pull redis:
#
#            docker run --name redis -p 6379:6379 --network redis-network -it -d redis
#
#            docker run -d --name beep_redis redis
#
#            docker run -d --name beep_app --log-driver=syslog -p 80:8080 \
#              ${{ secrets.DOCKER_USERNAME }}/beep:latest


#            docker stop beep
#            docker rm beep
#            docker rmi ${{ secrets.DOCKER_USERNAME }}/beep:latest
#            docker pull ${{ secrets.DOCKER_USERNAME }}/beep:latest
#            docker run -d -p 8080:8080 --name beep ${{ secrets.DOCKER_USERNAME }}/beep:latest

          # 레디스 network 해줘야됨
